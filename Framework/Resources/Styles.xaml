<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="HeaderFontSize">30</system:Double>
    <system:Double x:Key="SubHeaderFontSize">20</system:Double>
    <system:Double x:Key="ContentFontSize">16</system:Double>
    <system:Double x:Key="ContentSmallFontSize">12</system:Double>

    <!-- TextBlock -->

    <Style x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource HeaderFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
    </Style>

    <Style x:Key="SubHeaderTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource SubHeaderFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
    </Style>

    <Style x:Key="ContentTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    </Style>

    <Style x:Key="ContentSmallTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MetroTextBlock}">
        <Setter Property="FontSize" Value="{StaticResource ContentSmallFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    </Style>

    <!-- TextBox -->

    <Style x:Key="SubHeaderTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="FontSize" Value="{StaticResource SubHeaderFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
    </Style>

    <Style x:Key="ContentTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
    </Style>

    <!-- Button -->

    <Style x:Key="HeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SubHeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource SubHeaderFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>